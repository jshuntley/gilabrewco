---
import { getCollection, type CollectionEntry } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

type Props = {
  post: CollectionEntry<"blog">;
};

const { post } = Astro.props;
const { Content } = await post.render();
const permalink = new URL(Astro.url.pathname, Astro.site).href;
---

<BaseLayout
  title={post.data.title}
  description={post.data.description}
  permalink={permalink}
  current="blog"
>
  <!-- Hero Section -->
  <div class="relative py-24 bg-desert-sand dark:bg-forest-green">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <div
          class="text-sm text-forest-green/60 dark:text-desert-sand/60 font-medium mb-4"
        >
          {
            new Date(post.data.publishDate).toLocaleDateString("en-us", {
              year: "numeric",
              month: "long",
              day: "numeric",
            })
          }
          {post.data.author && <span class="mx-2">Â·</span>}
          {post.data.author && <span>{post.data.author}</span>}
        </div>
        <h1 class="text-4xl md:text-5xl font-bold mb-6">{post.data.title}</h1>
        {
          post.data.description && (
            <p class="text-xl text-forest-green/80 dark:text-desert-sand/80 max-w-2xl mx-auto">
              {post.data.description}
            </p>
          )
        }
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
    <article>
      {
        post.data.image && (
          <img
            src={post.data.image}
            alt={post.data.title}
            class="w-full aspect-[21/9] object-cover rounded-xl shadow-lg mb-12"
          />
        )
      }

      <div class="blog-content">
        <Content />
      </div>

      {
        post.data.tags && post.data.tags.length > 0 && (
          <div class="mt-12 pt-6 border-t border-forest-green/10 dark:border-desert-sand/10">
            <div class="flex flex-wrap gap-2">
              {post.data.tags.map((tag: string) => (
                <span class="px-3 py-1 bg-forest-green/5 dark:bg-desert-sand/5 rounded-full text-sm text-forest-green/60 dark:text-desert-sand/60">
                  {tag}
                </span>
              ))}
            </div>
          </div>
        )
      }
    </article>

    <!-- Navigation -->
    <nav
      class="mt-12 pt-6 border-t border-forest-green/10 dark:border-desert-sand/10"
    >
      <div class="flex justify-between">
        <a
          href="/blog"
          class="inline-flex items-center text-forest-green/60 dark:text-desert-sand/60 hover:text-canyon-red transition-colors duration-200"
        >
          <svg
            class="w-5 h-5 mr-2"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M15 19l-7-7 7-7"></path>
          </svg>
          Back to Blog
        </a>
      </div>
    </nav>
  </div>
</BaseLayout>

<style>
  header {
    text-align: center;
  }

  header h1 {
    margin-bottom: 0.7em;
  }

  header p {
    color: var(--text-secondary);
    text-transform: uppercase;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  header hr {
    min-width: 100px;
    width: 30%;
  }
</style>
