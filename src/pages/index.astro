---
import BaseLayout from "../layouts/BaseLayout.astro";
import type { Brew } from "../types/brew";
import { getCollection } from "astro:content";

const title = "Gila Brewing Co.";
const description =
  "Craft brewing inspired by the wilderness of the Gila National Forest";
const permalink = new URL(
  Astro.url.pathname,
  Astro.site?.href ?? "https://gilabrewing.com"
).href;

// Get all brews using getCollection
const allBrews = await getCollection("brews");
const brews = allBrews.map((brew) => brew.data);

// Sort and group brews by status
const tappedBrews = brews
  .filter((brew) => brew.status === "tapped")
  .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
  .slice(0, 2);

const brewingBrews = brews
  .filter((brew) => brew.status === "brewing")
  .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
  .slice(0, 2);

const upcomingBrews = brews
  .filter((brew) => brew.status === "upcoming")
  .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
  .slice(0, 2);

// Status-specific styling
const statusStyles = {
  tapped: "text-light-accent dark:text-dark-accent font-bold",
  brewing: "text-light-muted dark:text-dark-muted",
  upcoming: "text-light-text/60 dark:text-dark-text/60",
};
---

<BaseLayout title={title} description={description} permalink={permalink}>
  <!-- Hero Section -->
  <div
    class="relative h-[calc(100vh-4rem)] flex flex-col justify-center items-center text-center"
  >
    <!-- Background Image with Overlay -->
    <div
      class="absolute inset-0 z-0"
      style="background: linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.3)), url('/assets/images/brewery-hero.jpg') center/cover no-repeat;"
      data-theme-toggle
    >
      <div
        class="absolute inset-0 bg-gradient-to-b from-light-base/30 to-transparent dark:from-black/60 dark:to-transparent"
      >
      </div>
    </div>

    <!-- Content -->
    <div class="relative z-10 px-4 max-w-7xl mx-auto -mt-16">
      <h1
        class="text-[clamp(3rem,8vw,6rem)] font-bold text-white mb-6 opacity-0 translate-y-5 animate-[fadeIn_0.8s_ease_forwards]"
      >
        Gila Brewing Co.
      </h1>
      <p
        class="text-[clamp(1.2rem,3vw,2rem)] text-white/90 max-w-3xl mx-auto mb-12 opacity-0 translate-y-5 animate-[fadeIn_0.8s_ease_forwards_0.2s]"
      >
        A homebrewing duo who love beer and want to share their experiences
      </p>
      <div
        class="flex flex-col sm:flex-row gap-4 sm:gap-6 justify-center opacity-0 translate-y-5 animate-[fadeIn_0.8s_ease_forwards_0.4s]"
      >
        <a
          href="/blog"
          class="w-full sm:w-32 px-8 py-4 bg-light-accent/90 dark:bg-dark-accent/90 text-light-base dark:text-dark-base rounded-lg font-sans font-semibold uppercase tracking-wider transition-all duration-300 hover:bg-light-accent hover:dark:bg-dark-accent hover:-translate-y-0.5 hover:shadow-lg text-center"
        >
          Blog
        </a>
        <a
          href="#about"
          class="w-full sm:w-32 px-8 py-4 bg-white/10 text-white rounded-lg font-sans font-semibold uppercase tracking-wider transition-all duration-300 hover:bg-white/20 hover:-translate-y-0.5 hover:shadow-lg backdrop-blur-sm text-center"
        >
          Beer
        </a>
      </div>
    </div>

    <!-- Scroll Indicator -->
    <a
      href="#about"
      class="absolute bottom-4 left-1/2 -translate-x-1/2 animate-bounce hover:text-canyon-red transition-colors duration-200 cursor-pointer"
      aria-label="Scroll to What's Brewing section"
    >
      <svg
        class="w-6 h-6 text-white"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
      </svg>
    </a>

    <!-- Add smooth scroll behavior -->
    <script>
      const anchors =
        document.querySelectorAll<HTMLAnchorElement>('a[href^="#"]');

      anchors.forEach((anchor) => {
        anchor.addEventListener("click", (e: MouseEvent) => {
          e.preventDefault();
          const href = anchor.getAttribute("href");
          if (!href) return;

          const targetElement = document.querySelector(href);
          if (targetElement) {
            targetElement.scrollIntoView({
              behavior: "smooth",
              block: "start",
            });
          }
        });
      });

      // Theme toggle with proper type assertions
      const themeToggle = document.querySelector(
        "[data-theme-toggle]"
      ) as HTMLElement;

      const updateOverlay = () => {
        if (!themeToggle) return;

        if (document.documentElement.classList.contains("dark")) {
          themeToggle.style.background =
            "linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url('/assets/images/brewery-hero.jpg') center/cover no-repeat";
        } else {
          themeToggle.style.background =
            "linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.3)), url('/assets/images/brewery-hero.jpg') center/cover no-repeat";
        }
      };

      // Update on theme change with cleanup
      const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
          if (mutation.attributeName === "class") {
            updateOverlay();
          }
        });
      });

      if (document.documentElement) {
        observer.observe(document.documentElement, {
          attributes: true,
        });
      }

      // Initial setup
      updateOverlay();

      // Cleanup on page unload
      window.addEventListener("unload", () => {
        observer.disconnect();
      });
    </script>
  </div>

  <!-- Features Section -->
  <div class="py-24 bg-light-base dark:bg-dark-base" id="about">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-20">
        <h2 class="text-4xl font-bold text-light-text dark:text-dark-text mb-4">
          What's Brewing
        </h2>
        <p
          class="text-xl text-light-text/80 dark:text-dark-text/80 max-w-3xl mx-auto"
        >
          From concept to keg, here's what's happening in our brewhouse
        </p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-3 gap-12">
        <!-- Coming Soon / In the Works -->
        <div
          class="group p-8 bg-light-soft/10 dark:bg-dark-soft/5 rounded-xl shadow-md dark:shadow-white/5 transition-all duration-300 hover:-translate-y-2 hover:shadow-xl hover:dark:shadow-white/10 backdrop-blur-sm"
        >
          <div
            class="mb-6 text-light-text dark:text-dark-text group-hover:text-light-accent dark:group-hover:text-dark-accent transition-colors duration-300"
          >
            <svg class="w-12 h-12" fill="currentColor" viewBox="0 0 20 20">
              <path
                d="M5 3a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2V5a2 2 0 00-2-2H5zM5 11a2 2 0 00-2 2v2a2 2 0 002 2h2a2 2 0 002-2v-2a2 2 0 00-2-2H5zM11 5a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V5zM14 11a1 1 0 011 1v1h1a1 1 0 110 2h-1v1a1 1 0 11-2 0v-1h-1a1 1 0 110-2h1v-1a1 1 0 011-1z"
              ></path>
            </svg>
          </div>
          <h3
            class="text-2xl font-bold text-light-text dark:text-dark-text mb-4"
          >
            In the Works
          </h3>
          <div class="space-y-4">
            {
              upcomingBrews.length > 0 ? (
                upcomingBrews.map((brew) => (
                  <div class="border-b border-light-text/10 dark:border-dark-text/10 pb-4">
                    <h4 class="font-bold mb-1 text-light-accent dark:text-dark-accent">
                      {brew.name}
                    </h4>
                    <div class="text-sm text-light-text/60 dark:text-dark-text/60 mb-2">
                      {brew.style} â€¢ {brew.abv}% ABV
                    </div>
                    <p class="text-light-text/90 dark:text-dark-text/90">
                      {brew.description}
                    </p>
                    {brew.notes && (
                      <p class="text-sm text-light-text/80 dark:text-dark-text/80 mt-2">
                        {brew.notes}
                      </p>
                    )}
                    <span class={statusStyles[brew.status]}>
                      {brew.details}
                    </span>
                  </div>
                ))
              ) : (
                <div class="text-center py-8">
                  <p class="text-light-text/60 dark:text-dark-text/60">
                    No upcoming brews planned
                  </p>
                  <p class="text-sm text-light-text/40 dark:text-dark-text/40 mt-2">
                    Planning our next creation
                  </p>
                </div>
              )
            }
          </div>
        </div>

        <!-- Currently Brewing / In the Tank -->
        <div
          class="group p-8 bg-light-soft/10 dark:bg-dark-soft/5 rounded-xl shadow-md dark:shadow-white/5 transition-all duration-300 hover:-translate-y-2 hover:shadow-xl hover:dark:shadow-white/10 backdrop-blur-sm"
        >
          <div
            class="mb-6 text-light-text dark:text-dark-text group-hover:text-light-accent dark:group-hover:text-dark-accent transition-colors duration-300"
          >
            <svg class="w-12 h-12" fill="currentColor" viewBox="0 0 20 20">
              <path
                fill-rule="evenodd"
                d="M10 2c-2.236 0-4.43.18-6.57.524C1.993 2.755 1 4.014 1 5.426v5.148c0 1.413.993 2.67 2.43 2.902 1.168.188 2.352.327 3.55.414.28.02.521.18.642.413l1.713 3.293a.75.75 0 001.33 0l1.713-3.293a.783.783 0 01.642-.413 41.102 41.102 0 003.55-.414c1.437-.232 2.43-1.49 2.43-2.902V5.426c0-1.413-.993-2.67-2.43-2.902A41.289 41.289 0 0010 2zM6.75 6a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5zm0 2.5a.75.75 0 000 1.5h3.5a.75.75 0 000-1.5h-3.5z"
                clip-rule="evenodd"></path>
            </svg>
          </div>
          <h3
            class="text-2xl font-bold text-light-text dark:text-dark-text mb-4"
          >
            In the Tank
          </h3>
          <div class="space-y-4">
            {
              brewingBrews.length > 0 ? (
                brewingBrews.map((brew) => (
                  <div class="border-b border-light-text/10 dark:border-dark-text/10 pb-4">
                    <h4 class="font-bold mb-1 text-light-accent dark:text-dark-accent">
                      {brew.name}
                    </h4>
                    <div class="text-sm text-light-text/60 dark:text-dark-text/60 mb-2">
                      {brew.style} â€¢ {brew.abv}% ABV
                    </div>
                    <p class="text-light-text/90 dark:text-dark-text/90">
                      {brew.description}
                    </p>
                    {brew.notes && (
                      <p class="text-sm text-light-text/80 dark:text-dark-text/80 mt-2">
                        {brew.notes}
                      </p>
                    )}
                    <span class={statusStyles[brew.status]}>
                      {brew.details}
                    </span>
                  </div>
                ))
              ) : (
                <div class="text-center py-8">
                  <p class="text-light-text/60 dark:text-dark-text/60">
                    Nothing brewing at the moment
                  </p>
                  <p class="text-sm text-light-text/40 dark:text-dark-text/40 mt-2">
                    New batch coming soon
                  </p>
                </div>
              )
            }
          </div>
        </div>

        <!-- Recently Tapped / In the Keg -->
        <div
          class="group p-8 bg-light-soft/10 dark:bg-dark-soft/5 rounded-xl shadow-md dark:shadow-white/5 transition-all duration-300 hover:-translate-y-2 hover:shadow-xl hover:dark:shadow-white/10 backdrop-blur-sm"
        >
          <div
            class="mb-6 text-light-text dark:text-dark-text group-hover:text-light-accent dark:group-hover:text-dark-accent transition-colors duration-300"
          >
            <svg class="w-12 h-12" fill="currentColor" viewBox="0 0 20 20">
              <path
                d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z"
              ></path>
            </svg>
          </div>
          <h3
            class="text-2xl font-bold text-light-text dark:text-dark-text mb-4"
          >
            In the Keg
          </h3>
          <div class="space-y-4">
            {
              tappedBrews.length > 0 ? (
                tappedBrews.map((brew) => (
                  <div class="border-b border-light-text/10 dark:border-dark-text/10 pb-4">
                    <h4 class="font-bold mb-1 text-light-accent dark:text-dark-accent">
                      {brew.name}
                    </h4>
                    <div class="text-sm text-light-text/60 dark:text-dark-text/60 mb-2">
                      {brew.style} â€¢ {brew.abv}% ABV
                    </div>
                    <p class="text-light-text/90 dark:text-dark-text/90">
                      {brew.description}
                    </p>
                    {brew.notes && (
                      <p class="text-sm text-light-text/80 dark:text-dark-text/80 mt-2">
                        {brew.notes}
                      </p>
                    )}
                    <span class={statusStyles[brew.status]}>
                      {brew.details}
                    </span>
                  </div>
                ))
              ) : (
                <div class="text-center py-8">
                  <p class="text-light-text/60 dark:text-dark-text/60">
                    No beers currently on tap
                  </p>
                  <p class="text-sm text-light-text/40 dark:text-dark-text/40 mt-2">
                    Check back soon for new releases
                  </p>
                </div>
              )
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<style>
  @keyframes fadeIn {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
