---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import type { Brew, BrewEntry, BrewStatus } from "../types/brew";
import { STATUS_GROUPS } from "../types/brew";
import { Image } from "astro:assets";
import heroImage from "../assets/images/brewery-hero.webp";

// Constants
const TITLE = "Gila Brewing Co.";
const DESCRIPTION = "Craft brewing inspired by the wilderness of the Gila National Forest";
const PERMALINK = new URL(
  Astro.url.pathname,
  Astro.site?.href ?? "https://gilabrewing.com"
).href;

// Status groupings with proper type
type StatusGroup = (typeof STATUS_GROUPS)[keyof typeof STATUS_GROUPS];

// Define section type configuration
type SectionType = keyof typeof STATUS_GROUPS;
type SectionConfig = {
  title: string;
  type: SectionType;
  icon: "checklist" | "barrel" | "mug";
  emptyText: string;
  subText: string;
};

// Section configurations
const SECTIONS: SectionConfig[] = [
  { 
    title: "In the Works", 
    type: "upcoming",
    icon: "checklist",
    emptyText: "No upcoming brews planned",
    subText: "Planning our next creation"
  },
  { 
    title: "In the Tank",
    type: "brewing",
    icon: "barrel",
    emptyText: "Nothing brewing at the moment",
    subText: "New batch coming soon"
  },
  { 
    title: "In the Keg",
    type: "tapped",
    icon: "mug",
    emptyText: "No beers currently on tap",
    subText: "Check back soon for new releases"
  }
];

// Get and process brews
const allBrews: BrewEntry[] = await getCollection("brews");
const brews: Brew[] = allBrews.map((brew) => brew.data);

// Helper function to sort and filter brews with corrected typing
const getFilteredBrews = (statusGroup: StatusGroup) => {
  const isBrewStatus = (status: unknown): status is BrewStatus => {
    return (statusGroup as readonly string[]).includes(status as string);
  };

  return brews
    .filter(brew => isBrewStatus(brew.status))
    .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
    .slice(0, 2);
};

// Get brews for each section with proper typing
const brewsByType: Record<SectionType, Brew[]> = {
  tapped: getFilteredBrews(STATUS_GROUPS.tapped),
  brewing: getFilteredBrews(STATUS_GROUPS.brewing),
  upcoming: getFilteredBrews(STATUS_GROUPS.upcoming)
};

// Status styling with proper typing
const baseStyle = "text-light-accent dark:text-dark-accent font-bold";
const statusStyles: Record<BrewStatus, string> = {
  "on tap": baseStyle,
  kegged: baseStyle,
  carbonating: baseStyle,
  conditioning: baseStyle,
  gone: "text-light-accent/60 dark:text-dark-accent/60 font-bold",
  fermenting: baseStyle,
  "soft crashing": baseStyle,
  crashing: baseStyle,
  "secondary fermentation": baseStyle,
  upcoming: baseStyle,
  "waiting for ingredients": baseStyle
};
---

<BaseLayout title={TITLE} description={DESCRIPTION} permalink={PERMALINK}>
  <!-- Hero Section -->
  <div class="relative h-[calc(100svh-72px)] overflow-hidden">
    <div class="absolute inset-0">
      <div class="relative w-full h-full">
        <Image
          src={heroImage}
          alt="Gila Brewing Co. brewery"
          class="w-full h-full object-cover"
          loading="eager"
          quality="max"
          format="webp"
        />
        <!-- Gradient Overlays -->
        <div class="absolute inset-0 bg-black opacity-30 dark:opacity-50 transition-opacity duration-300"></div>
        <div class="absolute inset-0 bg-gradient-to-b from-light-base/30 to-transparent dark:from-black/60 dark:to-transparent transition-colors duration-300"></div>
      </div>
    </div>

    <!-- Hero Content Container -->
    <div class="relative h-full flex flex-col">
      <div class="flex-1 flex flex-col justify-center items-center text-center px-4 sm:px-6">
        <h1
          class="text-[clamp(2rem,8vw,6rem)] font-bold text-white mb-3 sm:mb-6 opacity-0 translate-y-5 animate-[fadeIn_0.8s_ease_forwards] leading-tight"
        >
          Gila Brewing Co.
        </h1>
        <p
          class="text-[clamp(0.875rem,4vw,2rem)] text-white/90 max-w-3xl mx-auto mb-6 sm:mb-12 opacity-0 translate-y-5 animate-[fadeIn_0.8s_ease_forwards_0.2s] leading-relaxed"
        >
          A homebrewing duo who love beer and want to share their experiences
        </p>
        <div
          class="flex flex-col sm:flex-row gap-3 sm:gap-6 justify-center w-full sm:w-auto opacity-0 translate-y-5 animate-[fadeIn_0.8s_ease_forwards_0.4s]"
        >
          <a
            href="/blog"
            class="group relative overflow-hidden w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 bg-light-accent/90 dark:bg-dark-accent/90 text-light-base/90 dark:text-dark-base/90 rounded-lg font-sans font-semibold uppercase tracking-wider transition-all duration-300"
          >
            <span class="relative z-10">Blog</span>
            <div class="absolute inset-0 -translate-x-full group-hover:translate-x-0 bg-light-base/10 dark:bg-dark-base/10 transition-transform duration-300 ease-out"></div>
          </a>
          <a
            href="#about"
            class="group relative overflow-hidden w-full sm:w-auto px-6 sm:px-8 py-3 sm:py-4 bg-white/20 backdrop-blur-sm text-white/90 rounded-lg font-sans font-semibold uppercase tracking-wider transition-all duration-300"
          >
            <span class="relative z-10">Beer</span>
            <div class="absolute inset-0 -translate-x-full group-hover:translate-x-0 bg-white/10 transition-transform duration-300 ease-out"></div>
          </a>
        </div>
      </div>

      <!-- Scroll Indicator -->
      <div class="flex justify-center pb-4 sm:pb-8">
        <a
          href="#about"
          class="animate-bounce opacity-80 hover:opacity-100 transition-opacity duration-200"
          aria-label="Scroll to What's Brewing section"
        >
          <svg
            class="w-6 h-6 text-white"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 14l-7 7m0 0l-7-7m7 7V3"
            ></path>
          </svg>
        </a>
      </div>
    </div>
  </div>

  <!-- Features Section -->
  <div class="relative z-10 py-12 sm:py-24 bg-light-base dark:bg-dark-base" id="about">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-8 sm:mb-20">
        <h2 
          style="
            background: linear-gradient(to right, var(--from-color), var(--via-color), var(--from-color));
            background-size: 200% 100%;
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            animation: gradientMove 3s linear infinite;
            line-height: 1.4;
            padding-bottom: 0.2em;
          "
          class="text-2xl sm:text-4xl font-bold mb-2 sm:mb-4"
        >
          What's Brewing
        </h2>
        <p class="text-base sm:text-xl text-light-text/80 dark:text-dark-text/80 max-w-3xl mx-auto">
          From concept to keg, here's what's happening in our brewhouse
        </p>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 sm:gap-6 lg:gap-12">
        {SECTIONS.map((section, sectionIndex) => (
          <div
            class="opacity-0 animate-[fadeIn_0.5s_ease_forwards]"
            style={`animation-delay: ${sectionIndex * 150}ms`}
          >
            <div 
              class="group relative p-[3px] bg-white dark:bg-dark-card rounded-xl shadow-md dark:shadow-white/5 
              transition-all duration-300 hover:-translate-y-2 hover:shadow-xl hover:dark:shadow-white/10 
              hover:bg-light-soft/10 dark:hover:bg-dark-soft/10 backdrop-blur-sm overflow-hidden"
              style="--light-accent: rgb(184, 149, 108); --dark-accent: rgb(184, 149, 108);"
            >
              <div 
                class="absolute inset-0 rounded-xl bg-[conic-gradient(from_var(--angle),var(--tw-gradient-stops))] from-light-accent/0 via-light-accent/20 to-light-accent/0 dark:from-dark-accent/0 dark:via-dark-accent/20 dark:to-dark-accent/0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 group-hover:animate-[rotate_4s_linear_infinite] z-[1]"
              ></div>
              <div class="relative bg-white dark:bg-dark-card rounded-xl p-4 sm:p-8 z-[2]">
                <!-- Section Icons -->
                <div class="mb-4 sm:mb-6">
                  {section.icon === "checklist" && (
                    <svg class="w-12 h-12 text-light-accent dark:text-dark-accent" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path>
                    </svg>
                  )}
                  {section.icon === "barrel" && (
                    <svg class="w-12 h-12 text-light-accent dark:text-dark-accent" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6 8h12M6 16h12"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7 4h10M7 20h10"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M8 4c-2 0-3 1.79-3 4v8c0 2.21 1 4 3 4M16 4c2 0 3 1.79 3 4v8c0 2.21-1 4-3 4"></path>
                    </svg>
                  )}
                  {section.icon === "mug" && (
                    <svg class="w-12 h-12 text-light-accent dark:text-dark-accent" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17 6h1a2 2 0 012 2v2a2 2 0 01-2 2h-1"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M6 6h11v12a2 2 0 01-2 2H8a2 2 0 01-2-2V6z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M7 9s1-1 3-1 3 1 3 1 1-1 3-1"></path>
                    </svg>
                  )}
                </div>

                <h3 class="text-xl sm:text-2xl font-bold text-light-text dark:text-dark-text mb-3 sm:mb-4 pb-2 border-b-2 border-light-accent/30 dark:border-dark-accent/30">
                  {section.title}
                </h3>

                <div class="space-y-4">
                  {brewsByType[section.type].length > 0 ? (
                    brewsByType[section.type].map((brew: Brew, brewIndex: number) => (
                      <div 
                        class="opacity-0 animate-[fadeIn_0.5s_ease_forwards] border-b border-light-text/10 dark:border-dark-text/10 pb-4 last:border-b-0"
                        style={`animation-delay: ${(sectionIndex * 3 + brewIndex) * 150}ms`}
                      >
                        <h4 class="text-lg font-bold mb-2 text-light-text dark:text-dark-text group-hover:text-light-accent dark:group-hover:text-dark-accent transition-colors duration-300">
                          {brew.name}
                        </h4>
                        <div class="flex items-center text-sm text-light-text/60 dark:text-dark-text/60 mb-3">
                          <span class="font-medium">{brew.style} • {brew.abv}% ABV</span>
                          <span class="inline-flex items-center ml-2">
                            <span 
                              class={`w-2 h-2 rounded-full mr-2 animate-pulse bg-light-accent dark:bg-dark-accent`}
                            ></span>
                            <span class={statusStyles[brew.status]}>
                              {brew.status}
                            </span>
                          </span>
                        </div>
                        <p class="text-base text-light-text/90 dark:text-dark-text/90 leading-relaxed">
                          {brew.description}
                        </p>
                        {brew.notes && (
                          <p class="text-sm text-light-text/70 dark:text-dark-text/70 mt-3 italic">
                            {brew.notes}
                          </p>
                        )}
                        <div class="mt-3 text-sm">
                          <span class={`${statusStyles[brew.status]} tracking-wide`}>
                            {brew.details}
                          </span>
                        </div>
                      </div>
                    ))
                  ) : (
                    <div class="text-center py-8">
                      <p class="text-light-text/60 dark:text-dark-text/60">
                        {section.emptyText}
                      </p>
                      <p class="text-sm text-light-text/40 dark:text-dark-text/40 mt-2">
                        {section.subText}
                      </p>
                    </div>
                  )}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</BaseLayout>

<style>
  /* Force hardware acceleration and prevent scaling */
  .fixed, .absolute {
    transform: translateZ(0);
    -webkit-transform: translateZ(0);
    will-change: transform;
    backface-visibility: hidden;
    -webkit-backface-visibility: hidden;
  }

  .hero-image {
    @apply w-full h-full object-cover;
  }

  /* Border animation styles */
  @property --angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
  }

  @keyframes rotate {
    to {
      --angle: 360deg;
    }
  }

  /* Firefox-specific styles */
  @-moz-document url-prefix() {
    .group:hover .absolute[class*="conic-gradient"] {
      opacity: 1;
      background: linear-gradient(
        var(--angle),
        var(--light-accent) 0%,
        transparent 50%,
        var(--light-accent) 100%
      );
      animation: rotate 4s linear infinite;
    }

    /* Fix for button hover animations in Firefox */
    .group:hover .absolute:not([class*="conic-gradient"]) {
      transform: translateX(0);
      transition: transform 0.3s ease-out;
    }
  }

  /* Fallback for other browsers without @property support */
  @supports not (background: paint(something)) and (not (-moz-appearance: none)) {
    .group:hover .absolute {
      opacity: 1;
      transform: translateX(0);
      transition: transform 0.3s ease-out;
    }
  }

  /* Safari support */
  @-webkit-keyframes rotate {
    to {
      --angle: 360deg;
    }
  }

  /* Prevent any unwanted scaling or movement */
  .fixed {
    transform: translate3d(0,0,0);
    -webkit-transform: translate3d(0,0,0);
  }

  /* Smooth scaling for mobile browsers */
  @media (hover: none) and (pointer: coarse) {
    .scale-[1.1] {
      transform: scale(1.1);
      transition: transform 0.7s ease-out;
    }
  }

  /* Remove all transform properties from the hero section */
  .absolute img {
    transform: none !important;
    -webkit-transform: none !important;
    backface-visibility: visible !important;
    -webkit-backface-visibility: visible !important;
    will-change: auto !important;
  }
</style>
