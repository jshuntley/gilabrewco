---
// Import global styles once
import "../styles/fonts.css";
import "../styles/global.css";

export interface Props {
  title: string;
  description: string;
  permalink: string;
}

const { title, description, permalink } = Astro.props;
const socialUrl = new URL(
  "assets/social.png",
  Astro.site?.href ?? "https://gilabrewing.com/"
).href;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta
  name="viewport"
  content="width=device-width,initial-scale=1,viewport-fit=cover"
/>
<meta http-equiv="X-UA-Compatible" content="IE=edge" />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={permalink} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={socialUrl} />

<!-- Theme handling script -->
<script is:inline>
  // Initialize theme on page load
  function initTheme() {
    const theme =
      localStorage.getItem("theme") ||
      (window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light");

    document.documentElement.classList.toggle("dark", theme === "dark");
  }

  // Run on initial page load
  initTheme();

  // Handle system theme changes
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", (e) => {
      if (!localStorage.getItem("theme")) {
        document.documentElement.classList.toggle("dark", e.matches);
      }
    });

  // Make theme functions available globally
  window.themeToggle = {
    toggle: () => {
      const isDark = document.documentElement.classList.contains("dark");
      const newTheme = isDark ? "light" : "dark";
      localStorage.setItem("theme", newTheme);
      document.documentElement.classList.toggle("dark", !isDark);
      return !isDark;
    },
  };

  // Initialize theme toggle button
  function initThemeToggle() {
    const toggle = document.getElementById("theme-toggle");
    if (toggle) {
      toggle.setAttribute(
        "aria-checked",
        document.documentElement.classList.contains("dark").toString()
      );
      toggle.addEventListener("click", () => {
        const isDark = window.themeToggle?.toggle() ?? false;
        toggle.setAttribute("aria-checked", isDark.toString());
      });
    }
  }

  // Make initThemeToggle available globally
  window.initThemeToggle = initThemeToggle;

  // Run on initial load
  initThemeToggle();
</script>

<!-- Handle theme during view transitions -->
<script>
  function initThemeToggle() {
    const toggle = document.getElementById("theme-toggle");
    if (toggle) {
      toggle.setAttribute(
        "aria-checked",
        document.documentElement.classList.contains("dark").toString()
      );
      toggle.addEventListener("click", () => {
        const isDark = window.themeToggle?.toggle() ?? false;
        toggle.setAttribute("aria-checked", isDark.toString());
      });
    }
  }

  document.addEventListener("astro:after-swap", () => {
    const theme = localStorage.getItem("theme");
    if (theme) {
      document.documentElement.classList.toggle("dark", theme === "dark");
    }
    // Re-initialize theme toggle after page transition
    initThemeToggle();
  });
</script>
