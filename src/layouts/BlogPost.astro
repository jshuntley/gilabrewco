---
import BaseLayout from "./BaseLayout.astro";
import Comments from "../components/Comments.astro";

const { content } = Astro.props;
const formattedDate = new Date(content.publishDate).toLocaleDateString(
  "en-us",
  {
    year: "numeric",
    month: "long",
    day: "numeric",
  }
);

// Create proper Open Graph URLs with absolute paths
const ogImage = content.image
  ? new URL(content.image, Astro.url.origin).href
  : new URL("assets/images/hero-bg.jpg", Astro.url.origin).href;

const permalink = new URL(Astro.url.pathname, Astro.url.origin).href;

// Add image dimensions for better social cards
const imageWidth = 1200;
const imageHeight = 630;
---

<BaseLayout
  title={content.title}
  description={content.description}
  permalink={permalink}
  current="blog"
  ogImage={ogImage}
  ogImageWidth={imageWidth}
  ogImageHeight={imageHeight}
>
  <!-- Hero Section - Made more compact -->
  <div
    class="relative py-12 bg-gradient-to-b from-light-base to-light-soft dark:from-dark-base dark:to-dark-soft"
  >
    <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center">
        <!-- Meta info -->
        <div
          class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-light-soft/50 dark:bg-dark-soft/50 text-sm font-medium text-light-text/70 dark:text-dark-text/70 mb-4"
        >
          <time datetime={content.publishDate}>{formattedDate}</time>
          {
            content.author && (
              <>
                <span class="w-1 h-1 rounded-full bg-light-text/30 dark:bg-dark-text/30" />
                <span>{content.author}</span>
              </>
            )
          }
        </div>

        <!-- Title -->
        <h1
          class="text-3xl md:text-4xl font-bold mb-4 text-light-text dark:text-dark-text max-w-2xl mx-auto"
        >
          {content.title}
        </h1>

        <!-- Description -->
        {
          content.description && (
            <p class="text-lg text-light-text/80 dark:text-dark-text/80 max-w-2xl mx-auto">
              {content.description}
            </p>
          )
        }
      </div>

      <!-- Featured Image - Made more reasonable size -->
      {
        content.image && (
          <div class="mt-8 max-w-2xl mx-auto">
            <img
              src={content.image}
              alt={content.title}
              class="rounded-lg shadow-md w-full h-auto object-cover"
              style="max-height: 400px;"
              loading="eager"
            />
          </div>
        )
      }
    </div>
  </div>

  <!-- Main Content -->
  <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <article class="prose prose-lg dark:prose-invert mx-auto">
      <slot />
    </article>

    <!-- Share Links -->
    <div
      class="mt-12 pt-8 border-t border-light-text/10 dark:border-dark-text/10 flex justify-center gap-6"
    >
      <!-- Native Share Button -->
      <button
        id="share-button"
        class="p-3 rounded-full bg-light-accent/10 dark:bg-dark-accent/10 text-light-accent dark:text-dark-accent hover:bg-light-accent/20 dark:hover:bg-dark-accent/20 transition-all duration-200 hover:scale-105 focus:outline-none focus:ring-2 focus:ring-light-accent/20 dark:focus:ring-dark-accent/20"
        aria-label="Share post"
      >
        <svg
          class="w-5 h-5"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z"
          ></path>
        </svg>
      </button>

      <!-- Social Share Links -->
      {
        [
          {
            name: "Threads",
            href: `https://threads.net/intent/post?text=${encodeURIComponent(`${content.title}\n\n${content.description}\n\n${permalink}`)}`,
            icon: (
              <path d="M141.537 88.988a66.667 66.667 0 00-2.518-.857c-1.482-27.307-16.403-42.94-41.457-43.1h-.34c-15.016 0-27.479 6.397-35.132 18.037l13.779 9.452c5.731-8.695 14.725-10.548 21.348-10.548h.076c8.25.053 14.475 2.449 18.503 7.127 2.932 3.405 4.893 8.111 5.864 14.05-7.314-1.243-15.224-1.626-23.68-1.14-23.82 1.372-39.134 15.265-38.105 34.568.522 9.792 5.4 18.216 13.735 23.719 7.047 4.652 16.124 6.927 25.557 6.412 12.458-.683 22.231-5.436 29.049-14.127 5.178-6.6 8.453-15.153 9.899-25.93 5.937 3.583 10.337 8.298 12.767 13.966 4.132 9.635 4.373 25.468-8.546 38.376-11.319 11.308-24.925 16.2-45.488 16.351-22.809-.169-40.06-7.484-51.275-21.742-10.503-13.351-15.93-32.635-16.133-57.317.203-24.682 5.63-43.966 16.133-57.317C51.19 24.425 68.44 17.11 91.25 16.94c22.975.17 40.526 7.52 52.171 21.847 5.71 7.026 10.015 15.861 12.853 26.162l16.147-4.308c-3.44-12.68-8.853-23.606-16.219-32.668C141.137 9.607 119.303.195 91.17 0h-.112C63.004.194 41.414 9.642 26.91 28.08 13.19 45.359 6.236 69.448 6.01 96.06L6 96l.01.06c.226 26.612 7.18 50.701 20.9 67.98 14.504 18.438 36.094 27.886 64.148 28.08h.112c24.96-.173 42.554-6.708 57.048-21.189 18.963-18.945 18.392-42.692 12.142-57.27-4.484-10.454-13.033-18.945-24.723-24.543zM98.44 129.507c-10.44.588-21.286-4.098-21.82-14.135-.397-7.442 5.296-15.746 22.461-16.735 1.966-.113 3.895-.169 5.79-.169 6.235 0 12.068.606 17.371 1.765-1.978 24.702-13.58 28.713-23.802 29.274z" />
            ),
          },
          {
            name: "Facebook",
            href: `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(permalink)}`,
            icon: (
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z" />
            ),
          },
          {
            name: "Reddit",
            href: `https://reddit.com/submit?url=${encodeURIComponent(permalink)}&title=${encodeURIComponent(content.title)}`,
            icon: (
              <path d="M12 0A12 12 0 000 12a12 12 0 0012 12 12 12 0 0012-12A12 12 0 0012 0zm5.01 4.744c.688 0 1.25.561 1.25 1.249a1.25 1.25 0 01-2.498.056l-2.597-.547-.8 3.747c1.824.07 3.48.632 4.674 1.488.308-.309.73-.491 1.207-.491.968 0 1.754.786 1.754 1.754 0 .716-.435 1.333-1.01 1.614a3.111 3.111 0 01.042.52c0 2.694-3.13 4.87-7.004 4.87-3.874 0-7.004-2.176-7.004-4.87 0-.183.015-.366.043-.534A1.748 1.748 0 014.028 12c0-.968.786-1.754 1.754-1.754.463 0 .898.196 1.207.49 1.207-.883 2.878-1.43 4.744-1.487l.885-4.182a.342.342 0 01.14-.197.35.35 0 01.238-.042l2.906.617a1.214 1.214 0 011.108-.701zM9.25 12C8.561 12 8 12.562 8 13.25c0 .687.561 1.248 1.25 1.248.687 0 1.248-.561 1.248-1.249 0-.688-.561-1.249-1.249-1.249zm5.5 0c-.687 0-1.248.561-1.248 1.25 0 .687.561 1.248 1.249 1.248.688 0 1.249-.561 1.249-1.249 0-.687-.562-1.249-1.25-1.249zm-5.466 3.99a.327.327 0 00-.231.094.33.33 0 000 .463c.842.842 2.484.913 2.961.913.477 0 2.105-.056 2.961-.913a.361.361 0 00.029-.463.33.33 0 00-.464 0c-.547.533-1.684.73-2.512.73-.828 0-1.979-.196-2.512-.73a.326.326 0 00-.232-.095z" />
            ),
          },
        ].map(({ name, href, icon }) => (
          <a
            href={href}
            target="_blank"
            rel="noopener noreferrer"
            class="p-3 rounded-full bg-light-accent/10 dark:bg-dark-accent/10 text-light-accent dark:text-dark-accent hover:bg-light-accent/20 dark:hover:bg-dark-accent/20 transition-all duration-200 hover:scale-105 focus:outline-none focus:ring-2 focus:ring-light-accent/20 dark:focus:ring-dark-accent/20"
            aria-label={`Share on ${name}`}
          >
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              {icon}
            </svg>
          </a>
        ))
      }
    </div>

    <!-- Navigation -->
    <nav
      class="mt-12 pt-8 border-t border-light-text/10 dark:border-dark-text/10"
    >
      <a
        href="/blog"
        class="group inline-flex items-center text-light-text/70 dark:text-dark-text/70 hover:text-light-accent dark:hover:text-dark-accent transition-colors duration-200"
      >
        <div
          class="p-2 -ml-2 rounded-full group-hover:bg-light-accent/10 dark:group-hover:bg-dark-accent/10 transition-colors duration-200"
        >
          <svg
            class="w-5 h-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M15 19l-7-7 7-7"></path>
          </svg>
        </div>
        <span class="font-medium ml-1">Back to Blog</span>
      </a>
    </nav>
  </div>

  <!-- Comments Section -->
  <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 pb-16">
    <Comments title={content.title} category="Blog Comments" />
  </div>
</BaseLayout>

<style>
  /* Add custom prose styles */
  .prose {
    --tw-prose-body: theme("colors.light.text/80");
    --tw-prose-headings: theme("colors.light.text");
    --tw-prose-links: theme("colors.light.accent");
    --tw-prose-bold: theme("colors.light.text");
    --tw-prose-counters: theme("colors.light.text/60");
    --tw-prose-bullets: theme("colors.light.text/60");
    --tw-prose-hr: theme("colors.light.text/10");
    --tw-prose-quotes: theme("colors.light.text");
    --tw-prose-quote-borders: theme("colors.light.accent/30");
    --tw-prose-captions: theme("colors.light.text/70");
    --tw-prose-code: theme("colors.light.text");
    --tw-prose-pre-code: theme("colors.light.text");
    --tw-prose-pre-bg: theme("colors.light.soft");
    --tw-prose-th-borders: theme("colors.light.text/10");
    --tw-prose-td-borders: theme("colors.light.text/5");
  }

  .dark .prose {
    --tw-prose-body: theme("colors.dark.text/80");
    --tw-prose-headings: theme("colors.dark.text");
    --tw-prose-links: theme("colors.dark.accent");
    --tw-prose-bold: theme("colors.dark.text");
    --tw-prose-counters: theme("colors.dark.text/60");
    --tw-prose-bullets: theme("colors.dark.text/60");
    --tw-prose-hr: theme("colors.dark.text/10");
    --tw-prose-quotes: theme("colors.dark.text");
    --tw-prose-quote-borders: theme("colors.dark.accent/30");
    --tw-prose-captions: theme("colors.dark.text/70");
    --tw-prose-code: theme("colors.dark.text");
    --tw-prose-pre-code: theme("colors.dark.text");
    --tw-prose-pre-bg: theme("colors.dark.soft");
    --tw-prose-th-borders: theme("colors.dark.text/10");
    --tw-prose-td-borders: theme("colors.dark.text/5");
  }
</style>

<script>
  const shareButton = document.getElementById("share-button");

  if (shareButton) {
    shareButton.addEventListener("click", async () => {
      try {
        if (navigator.share) {
          const metaDescription = document.querySelector(
            'meta[name="description"]'
          );
          const description =
            metaDescription instanceof HTMLMetaElement
              ? metaDescription.content
              : "";

          await navigator.share({
            title: document.title,
            text: description,
            url: window.location.href,
          });
        } else {
          // Fallback for browsers that don't support Web Share API
          const textArea = document.createElement("textarea");
          textArea.value = window.location.href;
          textArea.style.position = "fixed";
          document.body.appendChild(textArea);
          textArea.focus();
          textArea.select();
          try {
            document.execCommand("copy");
            alert("Link copied to clipboard!");
          } catch (err) {
            console.error("Failed to copy:", err);
          }
          document.body.removeChild(textArea);
        }
      } catch (error) {
        console.error("Error sharing:", error);
      }
    });
  }
</script>
